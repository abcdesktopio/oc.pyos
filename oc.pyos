FROM ubuntu:18.04

RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get upgrade -y
RUN DEBIAN_FRONTEND=noninteractive apt-get install -y python3 python3-pip 

# libglib2 	is used by ntlm_auth
# samba-common 	is used for nbmlookup
# krb5-user 	is used for kinit
RUN DEBIAN_FRONTEND=noninteractive apt-get install -y \
        geoip-database-extra    \
	python3-six		\
        python3-requests 	\
	python3-urllib3		\
        python3-httplib2 	\
        python3-dnspython	\
	python3-crypto		\
	python3-dnspython	\
	python3-geoip		\
	python3-pymongo 	\
 	python3-memcache        \
	python3-distutils	\
	libglib2.0-0		\
	samba-common		\
	vim			\
	iputils-ping		\
	dnsutils		\
	curl			\
	wget			


RUN DEBIAN_FRONTEND=noninteractive apt-get install -y \
    apt-transport-https \
    ca-certificates \
    gnupg-agent \
    software-properties-common

RUN curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
RUN add-apt-repository \
   "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
   $(lsb_release -cs) \
   stable"

# ADD debug for docker cli
# ADD debug telnet client
RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y \
    docker-ce-cli \
    telnet

# need libssl-dev,rustc for rsa>=4.1
RUN DEBIAN_FRONTEND=noninteractive apt-get install -y \
	libffi-dev		\
	python3-dev 		\
	libldap2-dev 		\
	libsasl2-dev 		\
	libssl-dev		\
	rustc


# libnss-ldap
RUN DEBIAN_FRONTEND=noninteractive apt-get install -y \
	cntlm 			\
	sasl2-bin 		\
	libsasl2-2 		\
	libsasl2-modules 	\
	libsasl2-modules-gssapi-mit	\
        krb5-user               \
 	libnss3-tools           \
        ldap-utils              \
	libgssglue1		\
	libgssrpc4		\
	libgss3			\
        libgssapi-krb5-2        \
        libgssglue1		\
	libnss3-tools	 	\
	gss-ntlmssp		

# install pip 
RUN     pip3 install --upgrade pip

COPY    .git /.git
COPY    var/pyos /var/pyos

# install python dep
RUN     cd var/pyos && pip3 install -r requirements.txt --upgrade 

# install git for versionning
RUN DEBIAN_FRONTEND=noninteractive apt-get install -y git \
	&& cd var/pyos \
	&& ./mkversion.sh \
	&& apt-get -y remove \
		git 				\
		build-essential 		\
		gcc 				\
		rustc 				\
		binutils 			\
	&& apt-get -y purge git

RUN 	cp /var/pyos/od.config.reference /var/pyos/od.config
COPY 	config.payload.default/ /config.payload.default
COPY 	config.signing.default/ /config.signing.default
# COPY    config.usersigning.default/ /config.usersigning.default

RUN     mkdir -p /var/pyos/logs
RUN 	mkdir -p /config
COPY 	composer /composer
WORKDIR /var/pyos
CMD     ["/composer/docker-entrypoint.sh"]
EXPOSE 8000
